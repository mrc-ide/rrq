% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rrq_task.R
\name{rrq_tasks_wait}
\alias{rrq_tasks_wait}
\title{Wait for group of tasks}
\usage{
rrq_tasks_wait(
  task_ids,
  timeout = NULL,
  time_poll = 1,
  progress = NULL,
  error = FALSE,
  follow = NULL,
  controller = NULL
)
}
\arguments{
\item{task_ids}{A vector of task ids to poll for}

\item{timeout}{Optional timeout, in seconds, after which an error
will be thrown if the task has not completed. If not given,
falls back on the controller's \code{timeout_task_wait} (see
\link{rrq_controller2})}

\item{time_poll}{Optional time with which to "poll" for completion
(default is 1s, see \code{\link[=rrq_task_wait]{rrq_task_wait()}} for details)}

\item{progress}{Optional logical indicating if a progress bar
should be displayed. If \code{NULL} we fall back on the value of the
global option \code{rrq.progress}, and if that is unset display a
progress bar if in an interactive session.}

\item{error}{Logical, indicating if we should throw an error if
the task was not successful. See \code{\link[=rrq_task_result]{rrq_task_result()}} for
details.  Note that an error is always thrown if not all tasks
are fetched in time.}

\item{follow}{Optional logical, indicating if we should follow any
redirects set up by doing \link{rrq_task_retry}. If not given, falls
back on the value passed into the controller, the global option
\code{rrq.follow}, and finally \code{TRUE}. Set to \code{FALSE} if you want to
return information about the original task, even if it has been
subsequently retried.}

\item{controller}{The controller to use.  If not given (or \code{NULL})
we'll use the controller registered with
\code{\link[=rrq_default_controller_set]{rrq_default_controller_set()}}.}
}
\value{
A list with task values, but we will change this soon
}
\description{
Poll for a group of tasks to complete, returning the
result as list when completed. If the tasks have already completed
this is roughly equivalent to \code{tasks_result}.
}
