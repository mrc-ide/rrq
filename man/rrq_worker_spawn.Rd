% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/worker_spawn.R
\name{rrq_worker_spawn}
\alias{rrq_worker_spawn}
\alias{rrq_worker_wait}
\title{Spawn a worker}
\usage{
rrq_worker_spawn(
  obj,
  n = 1,
  logdir = NULL,
  timeout = 600,
  worker_config = "localhost",
  worker_name_base = NULL,
  time_poll = 1,
  progress = NULL
)

rrq_worker_wait(obj, key_alive, timeout = 600, time_poll = 1, progress = NULL)
}
\arguments{
\item{obj}{An \code{rrq_controller} object}

\item{n}{Number of workers to spawn}

\item{logdir}{Path of a log directory to write the worker process
log to, interpreted relative to the current working directory}

\item{timeout}{Time to wait for workers to appear}

\item{worker_config}{Name of the configuration to use.  By default
the \code{"localhost"} configuration is used}

\item{worker_name_base}{Optional base to construct the worker
names from.  If omitted a random name will be used.}

\item{time_poll}{Polling period (in seconds) while waiting for
workers to come up.  Must be an integer, at least 1.}

\item{progress}{Show a progress bar while waiting for workers
(when \code{timeout} is at least 0)}

\item{key_alive}{A key name (generated from
\code{\link{rrq_expect_worker}} or \code{rrq_worker_spawn})}
}
\description{
Spawn a worker in the background
}
\details{
Spawning multiple workers.  If \code{n} is greater than one,
multiple workers will be spawned.  This happens in parallel so it
does not take n times longer than spawning a single worker.

Beware that signals like Ctrl-C passed to \emph{this} R instance
can still propagate to the child processes and can result in them
dying unexpectedly.  It is probably safer to start processes in a
completely separate session.
}
