% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/worker.R
\name{rrq_worker}
\alias{rrq_worker}
\title{rrq queue worker}
\usage{
rrq_worker(
  queue_id,
  con = redux::hiredis(),
  key_alive = NULL,
  worker_name = NULL,
  queue = NULL,
  time_poll = NULL,
  timeout = NULL,
  heartbeat_period = NULL,
  verbose = TRUE
)
}
\arguments{
\item{queue_id}{Name of the queue to connect to.  This will be the
prefix to all the keys in the redis database}

\item{con}{A redis connection}

\item{key_alive}{Optional key that will be written once the
worker is alive.}

\item{worker_name}{Optional worker name.  If omitted, a random
name will be created.}

\item{queue}{Queues to listen on, listed in decreasing order of
priority. If not given, we listen on the "default" queue.}

\item{time_poll}{Poll time.  Longer values here will reduce the
impact on the database but make workers less responsive to being
killed with an interrupt.  The default should be good for most
uses, but shorter values are used for debugging.}

\item{timeout}{Optional timeout to set for the worker.  This is
(roughly) equivalent to issuing a \code{TIMEOUT_SET} message
after initialising the worker, except that it's guaranteed to be
run by all workers.}

\item{heartbeat_period}{Optional period for the heartbeat.  If
non-NULL then a heartbeat process will be started (using the
\code{heartbeatr} package) which can be used to build fault
tolerant queues.}

\item{verbose}{Logical, indicating if the worker should print
logging output to the screen.  Logging to screen has a small but
measurable performance cost, and if you will not collect system
logs from the worker then it is wasted time.  Logging to the
redis server is always enabled.}
}
\description{
A rrq queue worker.  These are not for interacting with but will
sit and poll a queue for jobs.
}
