% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rrq_task.R
\name{rrq_task_times}
\alias{rrq_task_times}
\title{Fetch task times}
\usage{
rrq_task_times(task_ids, follow = NULL, controller = NULL)
}
\arguments{
\item{task_ids}{A vector of task ids}

\item{follow}{Optional logical, indicating if we should follow any
redirects set up by doing \link{rrq_task_retry}. If not given, falls
back on the value passed into the controller, the global option
\code{rrq.follow}, and finally \code{TRUE}. Set to \code{FALSE} if you want to
return information about the original task, even if it has been
subsequently retried.}

\item{controller}{The controller to use.  If not given (or \code{NULL})
we'll use the controller registered with
\code{\link[=rrq_default_controller_set]{rrq_default_controller_set()}}.}
}
\value{
A matrix of times, but we might change this to a
data.frame at some point in the future.
}
\description{
Fetch times for tasks at points in their life cycle.  For each
task returns the time of submission, starting and completion (not
necessarily successfully; this includes errors and interruptions).
If a task has not reached a point yet (e.g., submitted but not
run, or running but not finished) the time will be \code{NA}).  Times
are returned in unix timestamp format in UTC; you can use
\link[redux:redis_time]{redux::redis_time_to_r} to convert them to a POSIXt object.
}
