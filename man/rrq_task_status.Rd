% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rrq_task.R
\name{rrq_task_status}
\alias{rrq_task_status}
\title{Fetch task statuses}
\usage{
rrq_task_status(task_ids, named = FALSE, follow = NULL, controller = NULL)
}
\arguments{
\item{task_ids}{Optional character vector of task ids for which you
would like statuses.}

\item{named}{Logical, indicating if the return value should be
named with the task ids; as these are quite long this can make
the value a little awkward to work with.}

\item{follow}{Optional logical, indicating if we should follow any
redirects set up by doing \link{rrq_task_retry}. If not given, falls
back on the value passed into the controller, the global option
\code{rrq.follow}, and finally \code{TRUE}. Set to \code{FALSE} if you want to
return information about the original task, even if it has been
subsequently retried.}

\item{controller}{The controller to use.  If not given (or \code{NULL})
we'll use the controller registered with
\code{\link[=rrq_default_controller_set]{rrq_default_controller_set()}}.}
}
\value{
A character vector the same length as \code{task_ids}
}
\description{
Return a character vector of task statuses. The name of each
element corresponds to a task id, and the value will be one of the
possible statuses ("PENDING", "COMPLETE", etc).
}
\examples{
\dontshow{if (rrq:::enable_examples(require_queue = "rrq:example")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
obj <- rrq_controller("rrq:example")

ts <- rrq_task_create_bulk_call(sqrt, 1:10, controller = obj)
rrq_task_status(ts, controller = obj)
rrq_task_wait(ts, controller = obj)
rrq_task_status(ts, controller = obj)
\dontshow{\}) # examplesIf}
}
