% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/migrate.R
\name{rrq_migrate}
\alias{rrq_migrate}
\title{Migrate rrq's internal database and storage}
\usage{
rrq_migrate(queue_id, con = redux::hiredis())
}
\arguments{
\item{queue_id}{The name of the rrq queue (as passed to
\link{rrq_controller}}

\item{con}{A redis connection}
}
\value{
Nothing, called for its side effects
}
\description{
Migrate the rrq internal format after breaking changes. We take a
"best-effort" approach to migrate data, but generally one should
not assume that the rrq data store is a persistent store. If you
try to connect to a database that has not been migrated, an error
will be thrown indicating how you can run this function.
}
\section{Compatibility}{


We can detect if a rrq database has been opened with a newer
version of rrq and attempt to fix it. However, older versions do
not now know when the database has become out of date. Using the
same version of worker and controller will generally give good
results though.
}

\section{0.3.1 to 0.4.0}{


We moved from an internal data store based on \code{storr} to one that
allows offloading. This requires moving all data around to the
new store and rewriting tasks to reference it (both task inputs
and task outputs).
}

